name: Build AI-Platform Bothub NLP in GCR

on:
  push:
    tags:
      - '*.*.*-develop'
      - '*.*.*-staging'
      - '*.*.*'

jobs:
  docker:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        model: [ xx-NONE, xx-BERT, en-BERT, pt_br-BERT, es-SPACY, fr-SPACY, pt_br-SPACY , ru-SPACY, en-SPACY]
        
    steps:
      - name: Set variables
        run: |
            TAG="$( echo "${GITHUB_REF}" | cut -d'/' -f3 )"
            if grep -qs -e '^.*.*-develop' <<< "${TAG}" ; then
              echo "Found environment: DEVELOP - ${TAG}"
              echo "ENVIRONMENT=develop" | tee -a "${GITHUB_ENV}"
              exit 1 # stop action
            elif grep -qs -e '^.*.*-staging' <<< "${TAG}" ; then
              echo "Found environment: STAGING - ${TAG}"
              echo "ENVIRONMENT=staging" | tee -a "${GITHUB_ENV}"
            elif grep -qs -e '^.*.*' <<< "${TAG}" ; then
              echo "No environment found, assuming: PRODUCTION - ${TAG}"
              echo "ENVIRONMENT=production" | tee -a "${GITHUB_ENV}"
            else
              echo 'Not a valid tag. Skipping...'
              exit 1
            fi
            echo "TAG=$TAG" | tee -a "${GITHUB_ENV}"
            VERSION="${TAG}"
            echo "VERSION=${VERSION}" | tee -a "${GITHUB_ENV}"
            echo "COMMIT_SHA=$GITHUB_SHA" | tee -a "${GITHUB_ENV}"
            echo "IMAGE_TAG=us.gcr.io/bothub-273521/bothub-nlp-ai-platform:${TAG}-${{ matrix.model }}" | tee -a "${GITHUB_ENV}"
            echo "IMAGE_SOURCE_URL=https://github.com/weni-ai/bothub-nlp" | tee -a "${GITHUB_ENV}"

            
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: "${{env.GITHUB_SHA}}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: us.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}
          
      - name: Build and push - AI-Platform Bothub NLP Image
        uses: docker/build-push-action@v3
        with:
          context: .
          labels: |
            tag=${{env.TAG}}
            commit=${{env.COMMIT_SHA}}
            repository=${{env.IMAGE_SOURCE_URL}}
          file: ./aiplatform.Dockerfile
          push: true
          tags: "${{env.IMAGE_TAG}}"
          no-cache: true
          build-args: |
            DOWNLOAD_MODELS=${{ matrix.model }}
          
          
